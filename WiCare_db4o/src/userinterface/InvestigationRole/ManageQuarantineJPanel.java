/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.InvestigationRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.InvestigationOrganization;
import Business.Organization.Organization;
import Business.Organization.PoliceOrganization;
import Business.Organization.ReceptionOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.QuarantineRelatedCase;
import Business.WorkQueue.WorkRequest_investigationPolice;
import Business.WorkQueue.WorkRequest_quarantineList;
import Business.WorkQueue.WorkRequest_receptionInvestigation;
import People.People;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.text.SimpleDateFormat;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author user
 */
public class ManageQuarantineJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageQuarantineJPanel
     */
    private JPanel jpanel;
    private InvestigationOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem system;
    private QuarantineRelatedCase relatedCase;
    private ArrayList<String>a;
    private WorkRequest_receptionInvestigation thisrequest;
    private boolean test;
    public ManageQuarantineJPanel(JPanel jpanel, UserAccount userAccount, InvestigationOrganization organization, Enterprise enterprise, EcoSystem system) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        initComponents();
        this.jpanel = jpanel;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.system=system;
        setCombo();
        popTable();
        reportbtn.setEnabled(false);
        okbtn.setEnabled(false);
        popArray();
        setFieldEdible(false);
        test=false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void setFieldEdible(boolean boo){
        phonefield.setEditable(boo);
        agefield.setEditable(boo);
        statefield.setEditable(boo);
        countyfield.setEditable(boo);
        genderfield.setEditable(boo);
        addressfield.setEditable(boo);
    }
    public void setCombo(){
        networkJComboBox.removeAllItems();
        for (Network network : system.getNetworkList()) {
            networkJComboBox.addItem(network);
        }
    }
    public void setEnterprise(Network network){
        enterpriseTypeJComboBox.removeAllItems();
        for(Enterprise e:network.getEnterpriseDirectory().getEnterpriseList()){
            if(e.getEnterpriseType().getValue().equals("Police")){
                enterpriseTypeJComboBox.addItem(e);
            }
        }
    }
    private void popArray(){
        a=new ArrayList();
     for(WorkRequest_receptionInvestigation request: organization.getWorkQueue_receptionInvestigation().getWorkRequestList()){
         a.add(request.getPatient().getId());
         System.out.println(request);
         
     } 
    }
    
    private void popTable(){
        DefaultTableModel model = (DefaultTableModel) quarantineTable.getModel();
        model.setRowCount(0);
        for(WorkRequest_quarantineList request:organization.getWorkQueue_quarantineList().getWorkRequestList()){
            for(QuarantineRelatedCase relate:request.getRelatedCase()){
                Object[] row=new Object[8];
                row[0]=relate;
                row[1]=relate.getQuarantinePeople().getId();
                row[2]=relate.getQuarantinePeople().getName();
                row[3]=relate.getQuarantinePeople().getState();
                row[4]=relate.getQuarantinePeople().getPhone();
                row[5]=relate.getRelatedCaseNumber();
                row[6]=relate.getStartdate();
                row[7]=relate.getStatus();
                model.addRow(row);
            }
        }
    }
    
    private void popDetailTable(ArrayList<String> list){
        DefaultTableModel model = (DefaultTableModel) detailTable.getModel();
        model.setRowCount(0);
        for(String str:list){
            Object[] row=new Object[1];
            row[0]=str;
            model.addRow(row);
        }
    }
    
    private boolean checkList(QuarantineRelatedCase check,Enterprise en){
        boolean boo=true;
        PoliceOrganization policeOrg=null;
        for(Organization o:en.getOrganizationDirectory().getOrganizationList()){
            if(o instanceof PoliceOrganization){
                policeOrg=(PoliceOrganization) o;
            }
        }
        for(WorkRequest_investigationPolice w:policeOrg.getWorkQueue_investigationPolice().getWorkRequestList()){
            if(w.getQuarantinePeople().getId().equals(check.getQuarantinePeople().getId())){
                boo=false;
                break;
            }
        }
        return boo;
    }
    
    private double checkDate(Date d){
        Date date=new Date();
        double result;
        if(d!=null){
            long cha = date.getTime() - d.getTime();
            result = cha * 1.0 / (1000 * 60 * 60);
        }else{
            result=0;
        }
        System.out.println("in check date:"+result);
        return result;
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        quarantineTable = new javax.swing.JTable()
        {
            @Override
            public Component prepareRenderer(TableCellRenderer renderer, int rowIndex, int columnIndex){
                Component component = super.prepareRenderer(renderer, rowIndex, columnIndex);
                component.setBackground(Color.WHITE);
                Object value = getModel().getValueAt(rowIndex,columnIndex);
                component.setForeground(Color.BLACK);
                if (columnIndex==1){
                    if(a.indexOf(value)>-1){
                        component.setBackground(Color.GRAY);
                    }

                }

                return component;
            }}

            ;
            pictureLabel = new javax.swing.JLabel();
            jLabel2 = new javax.swing.JLabel();
            jLabel10 = new javax.swing.JLabel();
            jLabel3 = new javax.swing.JLabel();
            startdate = new javax.swing.JLabel();
            jLabel5 = new javax.swing.JLabel();
            enddate = new javax.swing.JLabel();
            okbtn = new javax.swing.JButton();
            reportbtn = new javax.swing.JButton();
            selectbtn = new javax.swing.JButton();
            jLabel6 = new javax.swing.JLabel();
            phonefield = new javax.swing.JTextField();
            jLabel8 = new javax.swing.JLabel();
            agefield = new javax.swing.JTextField();
            jLabel11 = new javax.swing.JLabel();
            genderfield = new javax.swing.JTextField();
            jLabel12 = new javax.swing.JLabel();
            addressfield = new javax.swing.JTextField();
            jLabel13 = new javax.swing.JLabel();
            statefield = new javax.swing.JTextField();
            jLabel14 = new javax.swing.JLabel();
            countyfield = new javax.swing.JTextField();
            jLabel15 = new javax.swing.JLabel();
            jScrollPane3 = new javax.swing.JScrollPane();
            messagearea = new javax.swing.JTextArea();
            backbtn2 = new javax.swing.JButton();
            networkJComboBox = new javax.swing.JComboBox();
            enterpriseTypeJComboBox = new javax.swing.JComboBox();
            jScrollPane2 = new javax.swing.JScrollPane();
            detailTable = new javax.swing.JTable();

            setBackground(new java.awt.Color(0, 102, 153));
            setForeground(new java.awt.Color(0, 153, 204));
            setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

            quarantineTable.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            quarantineTable.setForeground(new java.awt.Color(0, 153, 204));
            quarantineTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null}
                },
                new String [] {
                    "Case Number", "ID", "Name", "State", "Phone", "Related Case Number", "creation date", "status"
                }
            ) {
                boolean[] canEdit = new boolean [] {
                    false, false, false, false, false, false, false, false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            quarantineTable.setGridColor(new java.awt.Color(0, 102, 153));
            quarantineTable.setSelectionBackground(new java.awt.Color(204, 204, 204));
            quarantineTable.setSelectionForeground(new java.awt.Color(0, 51, 102));
            jScrollPane1.setViewportView(quarantineTable);
            if (quarantineTable.getColumnModel().getColumnCount() > 0) {
                quarantineTable.getColumnModel().getColumn(0).setResizable(false);
                quarantineTable.getColumnModel().getColumn(1).setResizable(false);
                quarantineTable.getColumnModel().getColumn(2).setResizable(false);
                quarantineTable.getColumnModel().getColumn(3).setResizable(false);
                quarantineTable.getColumnModel().getColumn(4).setResizable(false);
                quarantineTable.getColumnModel().getColumn(5).setResizable(false);
                quarantineTable.getColumnModel().getColumn(6).setResizable(false);
                quarantineTable.getColumnModel().getColumn(7).setResizable(false);
            }

            add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 1160, 200));

            pictureLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));
            add(pictureLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, 190, 270));
            add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 580, 60, 40));
            add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 310, 130, -1));

            jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            jLabel3.setForeground(new java.awt.Color(0, 153, 204));
            jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel3.setText("StartDate");
            jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));
            add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 460, 200, 30));

            startdate.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            startdate.setForeground(new java.awt.Color(0, 153, 204));
            startdate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            startdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));
            add(startdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 490, 200, 80));

            jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            jLabel5.setForeground(new java.awt.Color(0, 153, 204));
            jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel5.setText("EndDate");
            jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));
            add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 570, 200, 40));

            enddate.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            enddate.setForeground(new java.awt.Color(0, 153, 204));
            enddate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            enddate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));
            add(enddate, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 610, 200, 120));

            okbtn.setBackground(new java.awt.Color(204, 204, 204));
            okbtn.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            okbtn.setForeground(new java.awt.Color(255, 153, 51));
            okbtn.setText("OK");
            okbtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    okbtnActionPerformed(evt);
                }
            });
            add(okbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 360, 90, 40));

            reportbtn.setBackground(new java.awt.Color(204, 204, 204));
            reportbtn.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            reportbtn.setForeground(new java.awt.Color(255, 153, 51));
            reportbtn.setText("Report To Police");
            reportbtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    reportbtnActionPerformed(evt);
                }
            });
            add(reportbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 660, 210, 50));

            selectbtn.setBackground(new java.awt.Color(204, 204, 204));
            selectbtn.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            selectbtn.setForeground(new java.awt.Color(255, 153, 51));
            selectbtn.setText("select");
            selectbtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    selectbtnActionPerformed(evt);
                }
            });
            add(selectbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 290, -1, 40));

            jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            jLabel6.setForeground(new java.awt.Color(0, 153, 204));
            jLabel6.setText("phone");
            add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, -1, -1));

            phonefield.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            phonefield.setForeground(new java.awt.Color(0, 153, 204));
            add(phonefield, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, 200, -1));

            jLabel8.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            jLabel8.setForeground(new java.awt.Color(0, 153, 204));
            jLabel8.setText("age");
            add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, -1, -1));

            agefield.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            agefield.setForeground(new java.awt.Color(0, 153, 204));
            add(agefield, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 360, 200, -1));

            jLabel11.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            jLabel11.setForeground(new java.awt.Color(0, 153, 204));
            jLabel11.setText("gender");
            add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 300, -1, -1));

            genderfield.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            genderfield.setForeground(new java.awt.Color(0, 153, 204));
            add(genderfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 300, 200, -1));

            jLabel12.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            jLabel12.setForeground(new java.awt.Color(0, 153, 204));
            jLabel12.setText("address");
            add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 360, -1, -1));

            addressfield.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            addressfield.setForeground(new java.awt.Color(0, 153, 204));
            add(addressfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 360, 200, -1));

            jLabel13.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            jLabel13.setForeground(new java.awt.Color(0, 153, 204));
            jLabel13.setText("state");
            add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 300, -1, -1));

            statefield.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            statefield.setForeground(new java.awt.Color(0, 153, 204));
            add(statefield, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 300, 200, -1));

            jLabel14.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            jLabel14.setForeground(new java.awt.Color(0, 153, 204));
            jLabel14.setText("county");
            add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 360, -1, -1));

            countyfield.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            countyfield.setForeground(new java.awt.Color(0, 153, 204));
            add(countyfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 360, 200, -1));

            jLabel15.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            jLabel15.setForeground(new java.awt.Color(0, 153, 204));
            jLabel15.setText("message");
            add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 460, -1, -1));

            messagearea.setColumns(20);
            messagearea.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            messagearea.setForeground(new java.awt.Color(0, 153, 204));
            messagearea.setRows(5);
            jScrollPane3.setViewportView(messagearea);

            add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 490, 230, 120));

            backbtn2.setBackground(new java.awt.Color(204, 204, 204));
            backbtn2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            backbtn2.setForeground(new java.awt.Color(255, 153, 51));
            backbtn2.setText("back");
            backbtn2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    backbtn2ActionPerformed(evt);
                }
            });
            add(backbtn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 0, -1, -1));

            networkJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
            networkJComboBox.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    networkJComboBoxActionPerformed(evt);
                }
            });
            add(networkJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 680, 159, -1));

            enterpriseTypeJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
            add(enterpriseTypeJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 680, 159, -1));

            detailTable.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            detailTable.setForeground(new java.awt.Color(0, 153, 204));
            detailTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null},
                    {null},
                    {null},
                    {null}
                },
                new String [] {
                    "update detail"
                }
            ) {
                boolean[] canEdit = new boolean [] {
                    false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            detailTable.setGridColor(new java.awt.Color(0, 102, 153));
            detailTable.setSelectionBackground(new java.awt.Color(204, 204, 204));
            detailTable.setSelectionForeground(new java.awt.Color(0, 51, 102));
            jScrollPane2.setViewportView(detailTable);
            if (detailTable.getColumnModel().getColumnCount() > 0) {
                detailTable.getColumnModel().getColumn(0).setResizable(false);
            }

            add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 460, 530, 180));
        }// </editor-fold>//GEN-END:initComponents

    private void selectbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectbtnActionPerformed
        // TODO add your handling code here:
        int select=quarantineTable.getSelectedRow();
        if(select<0){
            JOptionPane.showMessageDialog(null,"please select");
            return;
        }else{
            QuarantineRelatedCase getList=(QuarantineRelatedCase) quarantineTable.getValueAt(select, 0);
            this.relatedCase=getList;
            People p=getList.getQuarantinePeople();
            if(a.indexOf(p.getId())<0){
               test=true;
            }
            phonefield.setText(p.getPhone());
            agefield.setText(String.valueOf(p.getAge()));
            statefield.setText(p.getState());
            countyfield.setText(p.getCounty());
            genderfield.setText(p.getGender());
            addressfield.setText(p.getAddress());
            ImageIcon im=new ImageIcon(p.getPicture());
            
        ImageIcon imageIcon = new ImageIcon(im.getImage().getScaledInstance(190, 270, Image.SCALE_DEFAULT));
        
          pictureLabel.setIcon(imageIcon);
            
            startdate.setText(getList.getStartdate());
            enddate.setText(getList.getEnddate());
            reportbtn.setEnabled(true);
            okbtn.setEnabled(true);
            if(getList.getDetails()!=null){
                popDetailTable(getList.getDetails());
            }
        }
    }//GEN-LAST:event_selectbtnActionPerformed

    private void backbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtn2ActionPerformed
        // TODO add your handling code here:
        jpanel.remove(this);
        CardLayout layout = (CardLayout) jpanel.getLayout();
        layout.previous(jpanel);
    }//GEN-LAST:event_backbtn2ActionPerformed

    private void okbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okbtnActionPerformed
        // TODO add your handling code here:
        if(relatedCase.getStatus().equals("under recording")){
            JOptionPane.showMessageDialog(null, "already under recording");
            return;
        }else if(relatedCase.getStatus().equals("pending")){
            relatedCase.setStatus("under recording");
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm");
            Date date=new Date();
            relatedCase.getDetails().add(formatter.format(date)+":under recording");
        }
        if(relatedCase.getDetails()!=null){
                popDetailTable(relatedCase.getDetails());
            }
        popTable();
        
    }//GEN-LAST:event_okbtnActionPerformed

    private void reportbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportbtnActionPerformed
        // TODO add your handling code here:
//Emily Edition
        //double result=0;
        SimpleDateFormat formatter= new SimpleDateFormat("yyyy-MM-dd HH:mm");
        if(relatedCase.getStatus().equals("pending")){
            JOptionPane.showMessageDialog(null, "you cannot process now, list need to be recorded");
            return;
        }else if(relatedCase.getStatus().equals("under recording")){
                Enterprise en=(Enterprise) enterpriseTypeJComboBox.getSelectedItem();
                if(en==null){
                    JOptionPane.showMessageDialog(null, "please select");
                    return;
                }else{
                    Date date=new Date();
                    if(checkDate(relatedCase.getSendDate())==0||checkDate(relatedCase.getSendDate())>24||checkList(relatedCase,en)==true){
                        relatedCase.setSendDate(date);
                        relatedCase.setStatus("pending");
                        relatedCase.getDetails().add(formatter.format(date)+":send to police");
                        if(relatedCase.getDetails()!=null){
                            popDetailTable(relatedCase.getDetails());
                        }
                        String message=messagearea.getText();
                        WorkRequest_investigationPolice sendToPolice=new WorkRequest_investigationPolice();
                        sendToPolice.setStatus("pending");
                    if(test==true){
                        sendToPolice.setMessage("[COVID-19 contact tracing case]\n"+message);}
                        else{
                        sendToPolice.setMessage("[COVID-19 case]\n"+message);}
                        sendToPolice.setStartdate(relatedCase.getStartdate());
                        sendToPolice.setEnddate(relatedCase.getEnddate());
                        sendToPolice.setEnt(enterprise); 
                        sendToPolice.setQuarantinePeople(relatedCase.getQuarantinePeople());
                        PoliceOrganization policeorg=null;
           
                        for(Organization o:en.getOrganizationDirectory().getOrganizationList()){
                            if(o instanceof PoliceOrganization){
                                policeorg=(PoliceOrganization) o;
                                break;
                            }
                        }
                policeorg.getWorkQueue_investigationPolice().getWorkRequestList().add(sendToPolice); 
                JOptionPane.showMessageDialog(null, "sent to police organization");
                messagearea.setText("");
                popTable();
            }
            else{
                JOptionPane.showMessageDialog(null,"you already contact police department today or this case hasn't finished, we are trying hard on this case");}
            }
        }
    }//GEN-LAST:event_reportbtnActionPerformed

    private void networkJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkJComboBoxActionPerformed
        // TODO add your handling code here:
        Network network=(Network)networkJComboBox.getSelectedItem();
        if(network!=null){
            setEnterprise(network);
        }
    }//GEN-LAST:event_networkJComboBoxActionPerformed
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressfield;
    private javax.swing.JTextField agefield;
    private javax.swing.JButton backbtn2;
    private javax.swing.JTextField countyfield;
    private javax.swing.JTable detailTable;
    private javax.swing.JLabel enddate;
    private javax.swing.JComboBox enterpriseTypeJComboBox;
    private javax.swing.JTextField genderfield;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea messagearea;
    private javax.swing.JComboBox networkJComboBox;
    private javax.swing.JButton okbtn;
    private javax.swing.JTextField phonefield;
    private javax.swing.JLabel pictureLabel;
    private javax.swing.JTable quarantineTable;
    private javax.swing.JButton reportbtn;
    private javax.swing.JButton selectbtn;
    private javax.swing.JLabel startdate;
    private javax.swing.JTextField statefield;
    // End of variables declaration//GEN-END:variables
}
