/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.InvestigationRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.InvestigationOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.QuarantineRelatedCase;
import Business.WorkQueue.WorkRequest_documentDoctor;
import Business.WorkQueue.WorkRequest_quarantineList;
import Business.WorkQueue.WorkRequest_receptionInvestigation;
import People.Diagnosis;
import People.People;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author stacyhuang
 */
public class CreateRelatedCaseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form InvestigationWorkAreaJPanel
     */
    private JPanel jpanel;
    private InvestigationOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem system;
    private WorkRequest_quarantineList RequesttoRecord;
    private People relatedPeople;
    private QuarantineRelatedCase q;
    private People p;
    public CreateRelatedCaseJPanel(JPanel jpanel, UserAccount userAccount, InvestigationOrganization organization, Enterprise enterprise, EcoSystem system,WorkRequest_quarantineList RequesttoRecord) {
        initComponents();
        this.jpanel = jpanel;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.system=system;
        this.RequesttoRecord=RequesttoRecord;
        createbtn.setEnabled(false);
        popMainTable();
        popRelated();
          q=new QuarantineRelatedCase();
        q.setCaseNumber(RequesttoRecord.getCaseNumber());
        p=new People();
        Calendar cal=Calendar.getInstance();
        cal.add(Calendar.DAY_OF_MONTH, 14);
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm");
        p.setId(RequesttoRecord.getPatient().getId());
        p.setAddress(RequesttoRecord.getPatient().getAddress());
        p.setBirthday(RequesttoRecord.getPatient().getBirthday());
        p.setCounty(RequesttoRecord.getPatient().getCounty());
        p.setGender(RequesttoRecord.getPatient().getGender());
        p.setName(RequesttoRecord.getPatient().getName());
        p.setPhone(RequesttoRecord.getPatient().getPhone());
       
        p.setPicture(RequesttoRecord.getPatient().getPicture());
        p.setState(RequesttoRecord.getPatient().getState());
        q.setQuarantinePeople(p);
        q.setCaseNumber(RequesttoRecord.getCaseNumber());
        q.setStartdate(cal.toString());
        q.setEnddate(formatter.format(cal.getTime()));
        q.setStatus("pending");
       // RequesttoRecord.getRelatedCase().add(q);
        
        
    
         //pnChart.setLayout(new BorderLayout());
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        relatedCasetable = new javax.swing.JTable();
        createbtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        addressfield = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        countyfield = new javax.swing.JTextField();
        namefield = new javax.swing.JTextField();
        phonefield = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        mainTable = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        searchfield = new javax.swing.JTextField();
        searchbtn = new javax.swing.JButton();
        statefield = new javax.swing.JTextField();
        pictureLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        agefield = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        genderfield = new javax.swing.JTextField();
        backbtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 102, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        relatedCasetable.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        relatedCasetable.setForeground(new java.awt.Color(0, 153, 204));
        relatedCasetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Case Number", "ID", "Name", "State", "Address", "Phone", "related case number", "creation date", "status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        relatedCasetable.setGridColor(new java.awt.Color(0, 102, 153));
        relatedCasetable.setSelectionBackground(new java.awt.Color(204, 204, 204));
        relatedCasetable.setSelectionForeground(new java.awt.Color(0, 51, 102));
        jScrollPane1.setViewportView(relatedCasetable);
        if (relatedCasetable.getColumnModel().getColumnCount() > 0) {
            relatedCasetable.getColumnModel().getColumn(0).setResizable(false);
            relatedCasetable.getColumnModel().getColumn(1).setResizable(false);
            relatedCasetable.getColumnModel().getColumn(2).setResizable(false);
            relatedCasetable.getColumnModel().getColumn(3).setResizable(false);
            relatedCasetable.getColumnModel().getColumn(4).setResizable(false);
            relatedCasetable.getColumnModel().getColumn(5).setResizable(false);
            relatedCasetable.getColumnModel().getColumn(6).setResizable(false);
            relatedCasetable.getColumnModel().getColumn(7).setResizable(false);
            relatedCasetable.getColumnModel().getColumn(8).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 1140, 183));

        createbtn.setBackground(new java.awt.Color(204, 204, 204));
        createbtn.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        createbtn.setForeground(new java.awt.Color(255, 153, 51));
        createbtn.setText("Create");
        createbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createbtnActionPerformed(evt);
            }
        });
        add(createbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 600, 120, 40));
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 275, 196, -1));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 204));
        jLabel5.setText("Name:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 450, -1, -1));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 153, 204));
        jLabel6.setText("Phone:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 500, -1, -1));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 204));
        jLabel7.setText("State:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 500, 60, -1));

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 153, 204));
        jLabel8.setText("Address:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 450, -1, -1));

        addressfield.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        addressfield.setForeground(new java.awt.Color(0, 153, 204));
        add(addressfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 450, 216, -1));

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 153, 204));
        jLabel9.setText("County:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 550, -1, -1));

        countyfield.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        countyfield.setForeground(new java.awt.Color(0, 153, 204));
        countyfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countyfieldActionPerformed(evt);
            }
        });
        add(countyfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 550, 216, -1));

        namefield.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        namefield.setForeground(new java.awt.Color(0, 153, 204));
        add(namefield, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 450, 180, -1));

        phonefield.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        phonefield.setForeground(new java.awt.Color(0, 153, 204));
        add(phonefield, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 500, 180, -1));

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 153, 204));
        jLabel10.setText("Photo:");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 390, -1, -1));

        mainTable.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        mainTable.setForeground(new java.awt.Color(0, 153, 204));
        mainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "case number", "ID", "name", "age", "state", "diagnosis date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mainTable.setGridColor(new java.awt.Color(0, 102, 153));
        mainTable.setSelectionBackground(new java.awt.Color(204, 204, 204));
        mainTable.setSelectionForeground(new java.awt.Color(0, 51, 102));
        jScrollPane2.setViewportView(mainTable);
        if (mainTable.getColumnModel().getColumnCount() > 0) {
            mainTable.getColumnModel().getColumn(0).setResizable(false);
            mainTable.getColumnModel().getColumn(1).setResizable(false);
            mainTable.getColumnModel().getColumn(2).setResizable(false);
            mainTable.getColumnModel().getColumn(3).setResizable(false);
            mainTable.getColumnModel().getColumn(4).setResizable(false);
            mainTable.getColumnModel().getColumn(5).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 960, 90));

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 153, 204));
        jLabel11.setText("search ID");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 390, -1, 30));

        searchfield.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        searchfield.setForeground(new java.awt.Color(0, 153, 204));
        add(searchfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 390, 179, -1));

        searchbtn.setBackground(new java.awt.Color(204, 204, 204));
        searchbtn.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        searchbtn.setForeground(new java.awt.Color(255, 153, 51));
        searchbtn.setText("search");
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });
        add(searchbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 390, -1, -1));

        statefield.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        statefield.setForeground(new java.awt.Color(0, 153, 204));
        add(statefield, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 500, 220, -1));

        pictureLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 153, 51)));
        add(pictureLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 430, 230, 210));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 204));
        jLabel4.setText("Age:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 550, -1, -1));

        agefield.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        agefield.setForeground(new java.awt.Color(0, 153, 204));
        add(agefield, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 550, 179, -1));

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 153, 204));
        jLabel12.setText("Gender:");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 600, -1, -1));

        genderfield.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        genderfield.setForeground(new java.awt.Color(0, 153, 204));
        add(genderfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 600, 179, -1));

        backbtn.setBackground(new java.awt.Color(204, 204, 204));
        backbtn.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        backbtn.setForeground(new java.awt.Color(255, 153, 51));
        backbtn.setText("back");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });
        add(backbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 153, 51));
        jButton1.setText("Map");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 40, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void popMainTable(){
        DefaultTableModel model = (DefaultTableModel) mainTable.getModel();
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm");
        model.setRowCount(0);
        Object[] row=new Object[6];
        row[0]=RequesttoRecord;
        row[1]=RequesttoRecord.getPatient().getId();
        row[2]=RequesttoRecord.getPatient().getName();
        row[3]=RequesttoRecord.getPatient().getAge();
        row[4]=RequesttoRecord.getPatient().getState();
        row[5]=formatter.format(RequesttoRecord.getDiagnosisDate());
        model.addRow(row);
    }
    private void popRelated(){
        DefaultTableModel model = (DefaultTableModel) relatedCasetable.getModel();
        model.setRowCount(0);
        for(QuarantineRelatedCase related:RequesttoRecord.getRelatedCase()){
            Object[] row=new Object[9];
            row[0]=related.getCaseNumber();
            row[1]=related.getQuarantinePeople().getId();
            row[2]=related.getQuarantinePeople().getName();
            row[3]=related.getQuarantinePeople().getState();
            row[4]=related.getQuarantinePeople().getAddress();
            row[5]=related.getQuarantinePeople().getPhone();
            row[6]=related.getRelatedCaseNumber();
            row[7]=related.getStartdate();
            row[8]=related.getStatus();
            model.addRow(row);
        }
    }
    private void setSearchField(People people){
        namefield.setText(people.getName());
        phonefield.setText(people.getPhone());
        agefield.setText(String.valueOf(people.getAge()));
        genderfield.setText(people.getGender());
        addressfield.setText(people.getAddress());
        statefield.setText(people.getState());
        countyfield.setText(people.getCounty());
         ImageIcon c=new ImageIcon(people.getPicture());
        ImageIcon imageIcon = new ImageIcon(c.getImage().getScaledInstance(230, 220, Image.SCALE_DEFAULT));
        
         
       
        pictureLabel.setIcon(imageIcon);
    }
    private void countyfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countyfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_countyfieldActionPerformed

    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed
        // TODO add your handling code here:
        this.relatedPeople=null;
        String searchId=searchfield.getText();
        System.out.println("search:"+searchId);
        if(searchId.equals("")){
            JOptionPane.showMessageDialog(null,"please enter");
            return;
        }else{
            for(People p:system.getPeopleDirectory().getPeoples()){
                System.out.println("find id:"+p.getId());
                if(p.getId().equals(searchId)){
                    System.out.println("found!");
                    setSearchField(p);
                    relatedPeople=p;
                    
                    break;
                }
            }
        }
        if(relatedPeople==null){
            JOptionPane.showMessageDialog(null, "no people found");
            return;
        }else{
            createbtn.setEnabled(true);
        }
    }//GEN-LAST:event_searchbtnActionPerformed

    private void createbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createbtnActionPerformed
        // TODO add your handling code here:
        QuarantineRelatedCase related=new QuarantineRelatedCase();
        boolean boo=true;
        //Emily Edition
        if(RequesttoRecord.getPatient().getId().equals(relatedPeople.getId())){
            JOptionPane.showMessageDialog(null, "you can use map button to select case into quaratine list");
            boo=false;
            return;
        }
        //Emily Edition
        for(Network w:system.getNetworkList()){
            for(Enterprise e:w.getEnterpriseDirectory().getEnterpriseList()){
                for(Organization o:e.getOrganizationDirectory().getOrganizationList()){
                    for(WorkRequest_quarantineList g:o.getWorkQueue_quarantineList().getWorkRequestList()){
               for(QuarantineRelatedCase r:g.getRelatedCase()){ 
            if(relatedPeople.getId().equals(r.getQuarantinePeople().getId())){
                System.out.println("1."+relatedPeople.getId()+",2."+r.getQuarantinePeople().getId());
                boo=false;
                break;
            }
        }}}}}
        if(boo==true){
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm");
            Calendar cal=Calendar.getInstance();
            related.setQuarantinePeople(relatedPeople);
            int c=system.getCaseCount()+1;
            system.setCaseCount(c);
            System.out.println("in create related case:"+c);
            related.setCaseNumber(c);
            related.setStatus("pending");
            related.setStartdate(formatter.format(cal.getTime()));
            cal.add(Calendar.DAY_OF_MONTH, 14);
            related.setEnddate(formatter.format(cal.getTime()));
            related.setRelatedCaseNumber(RequesttoRecord.getCaseNumber());
            RequesttoRecord.getRelatedCase().add(related);
            
//             if(RequesttoRecord.getRelatedCase().indexOf(related)<0){
//            RequesttoRecord.getRelatedCase().add(q);
//             }else{System.out.print("NO");}
           
            popRelated();
            System.out.println("reported size:"+RequesttoRecord.getRelatedCase().size());
        }else{
            JOptionPane.showMessageDialog(null, "already add to list");
            return;
        }
    }//GEN-LAST:event_createbtnActionPerformed

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        // TODO add your handling code here:
        jpanel.remove(this);
        CardLayout layout = (CardLayout) jpanel.getLayout();
        layout.previous(jpanel);
    }//GEN-LAST:event_backbtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        boolean boo=true;
        //Emily Edition
        boolean death=false;
        for(Network n:system.getNetworkList()){
        for(Enterprise e:n.getEnterpriseDirectory().getEnterpriseList()){
             for(Organization o:e.getOrganizationDirectory().getOrganizationList()){
               for(WorkRequest_documentDoctor w:o.getWorkQueue_documentDoctor().getWorkRequestList()){
                    if(w.getPeople().getId().equals(RequesttoRecord.getPatient().getId())){
                         for(Diagnosis ds:RequesttoRecord.getPatient().getMedicalRecord().getDoctorNote()){
            if(ds.getDiagnosis().contains("Death")){
             death=true;
             
             break;
            }}
                    }
               
             }
             }        
        
        }}
        
       
        for(QuarantineRelatedCase r:RequesttoRecord.getRelatedCase()){
            if(p.getId().equals(r.getQuarantinePeople().getId())){
                System.out.println("1."+p.getId()+",2."+r.getQuarantinePeople().getId());
                boo=false;
                break;
            }
        }
        if(death==true){
            JOptionPane.showMessageDialog(null, "This person report to be death, not trackable");
        }
        else{
            
        if(boo==true){
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm");
            Calendar cal=Calendar.getInstance();
            
            q.setStatus("pending");
            q.setStartdate(formatter.format(cal.getTime()));
            cal.add(Calendar.DAY_OF_MONTH, 14);
            q.setEnddate(formatter.format(cal.getTime()));
            q.setRelatedCaseNumber(RequesttoRecord.getCaseNumber());
            RequesttoRecord.getRelatedCase().add(q);
            
//             if(RequesttoRecord.getRelatedCase().indexOf(related)<0){
//            RequesttoRecord.getRelatedCase().add(q);
//             }else{System.out.print("NO");}
           
            popRelated();
            System.out.println("reported size:"+RequesttoRecord.getRelatedCase().size());
        }else{
            JOptionPane.showMessageDialog(null, "already add to list");
            return;
        }}
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressfield;
    private javax.swing.JTextField agefield;
    private javax.swing.JButton backbtn;
    private javax.swing.JTextField countyfield;
    private javax.swing.JButton createbtn;
    private javax.swing.JTextField genderfield;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable mainTable;
    private javax.swing.JTextField namefield;
    private javax.swing.JTextField phonefield;
    private javax.swing.JLabel pictureLabel;
    private javax.swing.JTable relatedCasetable;
    private javax.swing.JButton searchbtn;
    private javax.swing.JTextField searchfield;
    private javax.swing.JTextField statefield;
    // End of variables declaration//GEN-END:variables
}
